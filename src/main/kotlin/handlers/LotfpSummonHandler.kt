package org.darkmentat.handlers

import org.telegram.telegrambots.meta.api.methods.send.SendMessage
import org.telegram.telegrambots.meta.bots.AbsSender
import java.time.ZonedDateTime
import kotlin.random.Random


class LotfpSummonHandler(sender: AbsSender) : Handler(sender, "/lotfp_summon") {

    private val random = Random(ZonedDateTime.now().toInstant().toEpochMilli())

    private val oddments = listOf(
        Pair(listOf("Бегущие","Бесформенные","Гиганские","Дымящийся","Жужжащие","Звонящие"), listOf("Антены","Аппарат","Ветки","Гениталии","Глаза","Жало")),
        Pair(listOf("Клейкие","Клыкастые","Костяные","Кристальные","Мертвые","Меховые"), listOf("Железы","Заросли","Зубы","Когти","Крылья","Куски")),
        Pair(listOf("Многочисленные","Мокрые","Монстрообразные","Настигающие","Незаконченные","Некротические"), listOf("Лепестки","Лицо","Личинки","Ноги","Обертка","Отростки")),
        Pair(listOf("Нематериальные","Неоновые","Огненные","Окаменевшие","Острые","Отражающие"), listOf("Пасть","Перья","Плавники","Позвоночник","Полосы","Присоски")),
        Pair(listOf("Отрицательные","Прекрасные","Прозрачные","Пульсирующие","Светящийся","Скользкие"), listOf("Раковина","Рога","Руки","Сиськи","Смазка","Хвост")),
        Pair(listOf("Тонкие","Фонтанирующии","Холодные","Цепкие","Шипастые","Эластичные"), listOf("Хоботки","Цветки","Чешуя","Щупальце","Язвы","Яйца/Семена"))
    )

    private val features = listOf(
        "КБ +2d6",
        "КБ +d10",
        "КБ +d12",
        "КБ +d12, иммунитет к норм. Оружию",
        "КБ +d20",
        "КБ +d4",
        "КБ +d6",
        "КБ +d6, иммунитет к норм. оружию",
        "КБ +d8",
        "КБ +d8, иммунитет к норм. Оружию",
        "Анимировать мертвых по желанию",
        "Размыто (всегда включено, первая атака по существу всегда промазывает, дальше +2 к КБ).",
        "Экстра атака (если начальная атака попала, сделайте вторую атаку).",
        "Дополнительные повреждения при хорошем ударе (увеличивается кубик повреждений при 18+ на кубике попадания).",
        "Хаос (по желанию, но только одно активно)",
        "Смертельный дым (по желанию, но только одно активно)",
        "Атака холодом (дистанционная, HDd6 повреждений)",
        "Смущение (при попадании)",
        "Продолжительные повреждения (после попадания жертва получает на один кубик повреждений меньше каждый раунд, пока не умрет или существо не покинет измерение).",
        "Аура повреждений (все существа в 6 метров получают d6 повреждений каждый раунд).",
        "Тьма (по желанию, только одно активно).",
        "Обнаружить невидимость (всегда активно)",
        "Высасывает одно очко атрибута (при удачном попадании)",
        "Два измерения (всегда активно, но существо не получает дополнительных повреждений)",
        "Электрическая атака (дистанционная, HDd6)",
        "Высасывание энергии (при удачном попадании)",
        "Слушать мысли (всегда активно)",
        "Взрывается",
        "Безумие (при удачном попадании)",
        "Огненная атака (дистанционная, HDd6)",
        "Газообразная форма (по желанию)",
        "Сфера неуязвимости, мажорная (всегда на себе).",
        "Хватание (+5 к броскам захвата).",
        "Ускорение* (всегда на себе)",
        "Иммунитет к холоду",
        "Иммунитет к электричеству",
        "Иммунитет к огню",
        "Иммунитет к магии",
        "Иммунитет к металлу",
        "Иммунитет к обычному оружию",
        "Иммунитет к физическим атакам",
        "Иммунитет к дереву",
        "Ассимилирует (при попадании жертва делает спас-бросок от яда или является переносчиком нечто).",
        "Воспламеняющийся дым (по желанию, но только одно активно)",
        "Затерянная магия",
        "Высасывание магии (при попадании)",
        "Лабиринт (при попадании)",
        "Стирание памяти (при попадании, но нет других повреждений)",
        "Мимикрия (может производить звуки, которые слышал)",
        "Управление разумом (по желанию, только одно активно)",
        "Зеркальное отображение (всегда активно)",
        "Переместить землю (по желанию)",
        "Множество атак (дополнительно d3 атаки)",
        "Паралич (при удачном попадании)",
        "Гниющая рана (хиты не восстанавливаются обычным путем)",
        "Иллюзорная сила (по желанию, только одно активно)",
        "Иллюзорная психоделия (по желанию, только одно активно)",
        "Иллюзорная супрагория (по желанию, только одно активно)",
        "Эфирность (может проходить через твердые объекты)",
        "Растения умирают (все растения в 4 метра x HD умирают)",
        "Яд (при удачном попадании)",
        "Превратить других (при удачном попадании)",
        "Радужная сфера (по желанию)",
        "Радужный распылитель (по желанию)",
        "Радужная стена (по желанию, только одна активна)",
        "Псионическая атака (автоматическое попадание на d6 повреждений)",
        "Псионический крик (автоматическое попадание на d6 повреждений всем в радиусе 12 метров)",
        "Радиоактивная атака",
        "Радиация",
        "Дистанционная атака",
        "Регенерирует (восстанавливает d3 хита каждый раунд)",
        "Изменить гравитацию (по желанию, только одна активна)",
        "Тишина, 6 метров радиус (всегда активна)",
        "Замедление (один раз за 10 раундов)",
        "Отражение заклинаний (всегда активно)",
        "Заклинания (как колдун 2d6 уровня, случайный набор заклинаний)",
        "Воздушные споры (все в области делают спас-бросок или становятся инфицированными)",
        "Тошнотворные испарения (постоянно вокруг существа)",
        "Трансформировать камень (по желанию)",
        "Вызов (как заклинание, но без ошибок и вызванные сущности под контролем существа, а не начального заклинателя)",
        "Заглатывает целиком (на «20» при попадании)",
        "Символ (один тип, случайно определенный, по желанию)",
        "Телекинез (по желанию)",
        "Телепортация (по желанию)",
        "Остановка времени",
        "Превратить плоть в камень (при удачном попадании)",
        "Превратить камень в грязь* (по желанию)",
        "Ценные внутренности (стоят 500 серебряных монет за HD)",
        "Призрачный звук (по желанию)",
        "Жертва встает мертвецом",
        "Подверженность холоду (получает +1 повреждение на кубик)",
        "Подверженность холодной стали (получает +1 повреждение на кубик)",
        "Подверженность электричеству (получает +1 повреждение на кубик)",
        "Подверженность огню (получает +1 повреждение на кубик)",
        "Подверженность металлу (получает +1 повреждение на кубик)",
        "Подверженность физическим атакам (получает +1 повреждение на кубик)",
        "Подверженность серебру (получает +1 повреждение на кубик)",
        "Подверженность дереву (получает +1 повреждение на кубик)",
        "Стена огня (по желанию, только одна активна)",
        "Паутина (по желанию, только одна активна)"
    )

    override fun process(msg: String) {
        println("SEND: lotfp summon")

        if(msg.length < 18) return

        val formaDice = msg.substring(14, 16).toIntOrNull() ?: return
        val hitDice = msg.substring(17, msg.length).toIntOrNull() ?: return
        val baseDiceSize = when(hitDice){
            0 -> 2
            1 -> 4
            in 2..4 -> 6
            in 5..7 -> 8
            in 8..10 -> 10
            else -> 12
        }

        val startStats = "AC 12; AB 0 d6; Morale 10; MV 48m;"

        val formaRandomIndex = random.nextInt(1,formaDice+1)
        val forma = when(formaRandomIndex){
            in 1..2 -> when(random.nextInt(1, 4)){
                1 -> "Амеба"
                2 -> "Воздушный шар"
                else -> "Волк (движение 72 метра)"
            }
            in 3..4 -> when(random.nextInt(1, 4)){
                1 -> "Глазо-шар"
                2 -> "Гнилая плоть (при поп. болезнь)"
                else -> "Гнилая плоть (при поп. болезнь)"
            }
            in 5..6 -> when(random.nextInt(1, 4)){
                1 -> "Гриб (движение 24 метра)"
                2 -> "Змея (50% ядовитая/душитель)"
                else -> "Кальмар"
            }
            in 7..8 -> when(random.nextInt(1, 4)){
                1 -> "Краб (2 атаки, +2 КБ)"
                2 -> "Кристалл (+4 КБ)"
                else -> "Кровь (иммунитет к норм. атакам)"
            }
            in 9..10 -> when(random.nextInt(1, 4)){
                1 -> "Лягушка (прыжок 60 метров)"
                2 -> "Многогранник"
                else -> "Морская водоросль"
            }
            in 11..12 -> when(random.nextInt(1, 4)){
                1 -> "Насекомое (+2 КБ)"
                2 -> "Слизь"
                else -> "Экскременты"
            }

            in 11..19 -> when(random.nextInt(1, 11)){
                1 -> "Антиматерия (HDd6, взрыв при контаке)"
                2 -> "Ветер (движение 96 метров, иммунитет к норм. атакам)"
                3 -> "Дым (движение 96 метров, иммунитет норм. атакам, удушающая атака)"
                4 -> "Материя сна (при касании Конфузия)"
                5 -> "Мерцающие огни"
                6 -> "Молния (движение 96 метров, иммунитет к норм. атакам, d8 повреждений при касании, касание металлом наносит d8 повреждений)"
                7 -> "Тень"
                8 -> "Туман (иммунитет к норм. атакам)"
                9 -> "Чистая энергия (иммунитет к норм. атакам, касание наносит d8)"
                else -> "Шаровая молния (иммунитет к норм.атакам)"
            }

            20 -> when(random.nextInt(1, 7)){
                1 -> "Воспоминания до зачатия"
                2 -> "Коллективное стремление к самоубийству"
                3 -> "Плач матери за ее мертвым ребенком"
                4 -> "Пространство между тиком часов"
                5 -> "Сожаление о неиспользованных возможностях"
                else -> "Страх чернеющей планеты"
            }

            else -> return
        }

        var oddmentsText = ""
        var featuresText = ""

        if(formaRandomIndex == 20){
            sender.execute(
                SendMessage.builder()
                    .chatId(chatId.toString())
                    .text(forma)
                    .build()
            )
        }else{
            val baseNum = random.nextInt(1, baseDiceSize+1)

            for(i in 0..baseNum){
                val rnd = random.nextInt(1, baseDiceSize+1)
                if(rnd >= baseNum)
                    break

                val odd = oddments.random()
                if(oddmentsText.isNotEmpty())
                    oddmentsText += ", "
                else
                    oddmentsText += "\uD83D\uDC25"
                oddmentsText += "${odd.first.random()} ${odd.second.random()}"
            }

            while(true){
                val rnd = random.nextInt(1, baseDiceSize+1)
                if(rnd >= baseNum + (if(formaDice==20) 1 else 0) || rnd == 1)
                    break

                val feature = features.random()
                featuresText += "\uD83D\uDCA5"
                featuresText += feature
                featuresText += "\n"
            }

            sender.execute(
                SendMessage.builder()
                    .chatId(chatId.toString())
                    .text("$startStats\n$forma\n$oddmentsText\n$featuresText")
                    .build()
            )
        }
    }
}